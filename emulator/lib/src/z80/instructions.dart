
import 'package:emulator/src/enums.dart';
import 'package:ft/ft.dart' as Ft;

/* Classes */

class Instruction
{
  final int addr;
  final InstructionInfo info;
  final int dataOpt;

  Instruction(
    this.addr,
    this.info,
    this.dataOpt
  );
}

class InstructionInfo
{
  final int opCode;
  final OpPrefix prefix;
  final String name;
  final int byteSize;
  final int durationSuccess;
  final int durationFail;
  final String flagInfo;

  InstructionInfo(
    this.opCode,
    this.prefix,
    this.name,
    this.byteSize,
    this.durationSuccess,
    this.durationFail,
    this.flagInfo
  );

  String toString(){
  return 
'''opCode: ${Ft.toAddressString(this.opCode, 2)} {
  prefix: ${this.prefix}
  name: ${this.name}
  byteSize: ${this.byteSize}
  durationSuccess: ${this.durationSuccess}
  durationFail: ${this.durationFail}
  flagInfo: ${this.flagInfo}
}''';
  }
}

/* Enums */

enum OpPrefix {
  None,
  CB
}

/* Global */

final instInfos = new List<InstructionInfo>.unmodifiable([
  new InstructionInfo(0x00, OpPrefix.None, 'NOP', 1, 4, 4, '- - - -'),
  new InstructionInfo(0x01, OpPrefix.None, 'LD BC,d16', 3, 12, 12, '- - - -'),
  new InstructionInfo(0x02, OpPrefix.None, 'LD (BC),A', 1, 8, 8, '- - - -'),
  new InstructionInfo(0x03, OpPrefix.None, 'INC BC', 1, 8, 8, '- - - -'),
  new InstructionInfo(0x04, OpPrefix.None, 'INC B', 1, 4, 4, 'Z 0 H -'),
  new InstructionInfo(0x05, OpPrefix.None, 'DEC B', 1, 4, 4, 'Z 1 H -'),
  new InstructionInfo(0x06, OpPrefix.None, 'LD B,d8', 2, 8, 8, '- - - -'),
  new InstructionInfo(0x07, OpPrefix.None, 'RLCA', 1, 4, 4, '0 0 0 C'),
  new InstructionInfo(0x08, OpPrefix.None, 'LD (a16),SP', 3, 20, 20, '- - - -'),
  new InstructionInfo(0x09, OpPrefix.None, 'ADD HL,BC', 1, 8, 8, '- 0 H C'),
  new InstructionInfo(0x0A, OpPrefix.None, 'LD A,(BC)', 1, 8, 8, '- - - -'),
  new InstructionInfo(0x0B, OpPrefix.None, 'DEC BC', 1, 8, 8, '- - - -'),
  new InstructionInfo(0x0C, OpPrefix.None, 'INC C', 1, 4, 4, 'Z 0 H -'),
  new InstructionInfo(0x0D, OpPrefix.None, 'DEC C', 1, 4, 4, 'Z 1 H -'),
  new InstructionInfo(0x0E, OpPrefix.None, 'LD C,d8', 2, 8, 8, '- - - -'),
  new InstructionInfo(0x0F, OpPrefix.None, 'RRCA', 1, 4, 4, '0 0 0 C'),
  new InstructionInfo(0x10, OpPrefix.None, 'STOP 0', 2, 4, 4, '- - - -'),
  new InstructionInfo(0x11, OpPrefix.None, 'LD DE,d16', 3, 12, 12, '- - - -'),
  new InstructionInfo(0x12, OpPrefix.None, 'LD (DE),A', 1, 8, 8, '- - - -'),
  new InstructionInfo(0x13, OpPrefix.None, 'INC DE', 1, 8, 8, '- - - -'),
  new InstructionInfo(0x14, OpPrefix.None, 'INC D', 1, 4, 4, 'Z 0 H -'),
  new InstructionInfo(0x15, OpPrefix.None, 'DEC D', 1, 4, 4, 'Z 1 H -'),
  new InstructionInfo(0x16, OpPrefix.None, 'LD D,d8', 2, 8, 8, '- - - -'),
  new InstructionInfo(0x17, OpPrefix.None, 'RLA', 1, 4, 4, '0 0 0 C'),
  new InstructionInfo(0x18, OpPrefix.None, 'JR r8', 2, 12, 12, '- - - -'),
  new InstructionInfo(0x19, OpPrefix.None, 'ADD HL,DE', 1, 8, 8, '- 0 H C'),
  new InstructionInfo(0x1A, OpPrefix.None, 'LD A,(DE)', 1, 8, 8, '- - - -'),
  new InstructionInfo(0x1B, OpPrefix.None, 'DEC DE', 1, 8, 8, '- - - -'),
  new InstructionInfo(0x1C, OpPrefix.None, 'INC E', 1, 4, 4, 'Z 0 H -'),
  new InstructionInfo(0x1D, OpPrefix.None, 'DEC E', 1, 4, 4, 'Z 1 H -'),
  new InstructionInfo(0x1E, OpPrefix.None, 'LD E,d8', 2, 8, 8, '- - - -'),
  new InstructionInfo(0x1F, OpPrefix.None, 'RRA', 1, 4, 4, '0 0 0 C'),
  new InstructionInfo(0x20, OpPrefix.None, 'JR NZ,r8', 2, 12, 8, '- - - -'),
  new InstructionInfo(0x21, OpPrefix.None, 'LD HL,d16', 3, 12, 12, '- - - -'),
  new InstructionInfo(0x22, OpPrefix.None, 'LD (HL+),A', 1, 8, 8, '- - - -'),
  new InstructionInfo(0x23, OpPrefix.None, 'INC HL', 1, 8, 8, '- - - -'),
  new InstructionInfo(0x24, OpPrefix.None, 'INC H', 1, 4, 4, 'Z 0 H -'),
  new InstructionInfo(0x25, OpPrefix.None, 'DEC H', 1, 4, 4, 'Z 1 H -'),
  new InstructionInfo(0x26, OpPrefix.None, 'LD H,d8', 2, 8, 8, '- - - -'),
  new InstructionInfo(0x27, OpPrefix.None, 'DAA', 1, 4, 4, 'Z - 0 C'),
  new InstructionInfo(0x28, OpPrefix.None, 'JR Z,r8', 2, 12, 8, '- - - -'),
  new InstructionInfo(0x29, OpPrefix.None, 'ADD HL,HL', 1, 8, 8, '- 0 H C'),
  new InstructionInfo(0x2A, OpPrefix.None, 'LD A,(HL+)', 1, 8, 8, '- - - -'),
  new InstructionInfo(0x2B, OpPrefix.None, 'DEC HL', 1, 8, 8, '- - - -'),
  new InstructionInfo(0x2C, OpPrefix.None, 'INC L', 1, 4, 4, 'Z 0 H -'),
  new InstructionInfo(0x2D, OpPrefix.None, 'DEC L', 1, 4, 4, 'Z 1 H -'),
  new InstructionInfo(0x2E, OpPrefix.None, 'LD L,d8', 2, 8, 8, '- - - -'),
  new InstructionInfo(0x2F, OpPrefix.None, 'CPL', 1, 4, 4, '- 1 1 -'),
  new InstructionInfo(0x30, OpPrefix.None, 'JR NC,r8', 2, 12, 8, '- - - -'),
  new InstructionInfo(0x31, OpPrefix.None, 'LD SP,d16', 3, 12, 12, '- - - -'),
  new InstructionInfo(0x32, OpPrefix.None, 'LD (HL-),A', 1, 8, 8, '- - - -'),
  new InstructionInfo(0x33, OpPrefix.None, 'INC SP', 1, 8, 8, '- - - -'),
  new InstructionInfo(0x34, OpPrefix.None, 'INC (HL)', 1, 12, 12, 'Z 0 H -'),
  new InstructionInfo(0x35, OpPrefix.None, 'DEC (HL)', 1, 12, 12, 'Z 1 H -'),
  new InstructionInfo(0x36, OpPrefix.None, 'LD (HL),d8', 2, 12, 12, '- - - -'),
  new InstructionInfo(0x37, OpPrefix.None, 'SCF', 1, 4, 4, '- 0 0 1'),
  new InstructionInfo(0x38, OpPrefix.None, 'JR C,r8', 2, 12, 8, '- - - -'),
  new InstructionInfo(0x39, OpPrefix.None, 'ADD HL,SP', 1, 8, 8, '- 0 H C'),
  new InstructionInfo(0x3A, OpPrefix.None, 'LD A,(HL-)', 1, 8, 8, '- - - -'),
  new InstructionInfo(0x3B, OpPrefix.None, 'DEC SP', 1, 8, 8, '- - - -'),
  new InstructionInfo(0x3C, OpPrefix.None, 'INC A', 1, 4, 4, 'Z 0 H -'),
  new InstructionInfo(0x3D, OpPrefix.None, 'DEC A', 1, 4, 4, 'Z 1 H -'),
  new InstructionInfo(0x3E, OpPrefix.None, 'LD A,d8', 2, 8, 8, '- - - -'),
  new InstructionInfo(0x3F, OpPrefix.None, 'CCF', 1, 4, 4, '- 0 0 C'),
  new InstructionInfo(0x40, OpPrefix.None, 'LD B,B', 1, 4, 4, '- - - -'),
  new InstructionInfo(0x41, OpPrefix.None, 'LD B,C', 1, 4, 4, '- - - -'),
  new InstructionInfo(0x42, OpPrefix.None, 'LD B,D', 1, 4, 4, '- - - -'),
  new InstructionInfo(0x43, OpPrefix.None, 'LD B,E', 1, 4, 4, '- - - -'),
  new InstructionInfo(0x44, OpPrefix.None, 'LD B,H', 1, 4, 4, '- - - -'),
  new InstructionInfo(0x45, OpPrefix.None, 'LD B,L', 1, 4, 4, '- - - -'),
  new InstructionInfo(0x46, OpPrefix.None, 'LD B,(HL)', 1, 8, 8, '- - - -'),
  new InstructionInfo(0x47, OpPrefix.None, 'LD B,A', 1, 4, 4, '- - - -'),
  new InstructionInfo(0x48, OpPrefix.None, 'LD C,B', 1, 4, 4, '- - - -'),
  new InstructionInfo(0x49, OpPrefix.None, 'LD C,C', 1, 4, 4, '- - - -'),
  new InstructionInfo(0x4A, OpPrefix.None, 'LD C,D', 1, 4, 4, '- - - -'),
  new InstructionInfo(0x4B, OpPrefix.None, 'LD C,E', 1, 4, 4, '- - - -'),
  new InstructionInfo(0x4C, OpPrefix.None, 'LD C,H', 1, 4, 4, '- - - -'),
  new InstructionInfo(0x4D, OpPrefix.None, 'LD C,L', 1, 4, 4, '- - - -'),
  new InstructionInfo(0x4E, OpPrefix.None, 'LD C,(HL)', 1, 8, 8, '- - - -'),
  new InstructionInfo(0x4F, OpPrefix.None, 'LD C,A', 1, 4, 4, '- - - -'),
  new InstructionInfo(0x50, OpPrefix.None, 'LD D,B', 1, 4, 4, '- - - -'),
  new InstructionInfo(0x51, OpPrefix.None, 'LD D,C', 1, 4, 4, '- - - -'),
  new InstructionInfo(0x52, OpPrefix.None, 'LD D,D', 1, 4, 4, '- - - -'),
  new InstructionInfo(0x53, OpPrefix.None, 'LD D,E', 1, 4, 4, '- - - -'),
  new InstructionInfo(0x54, OpPrefix.None, 'LD D,H', 1, 4, 4, '- - - -'),
  new InstructionInfo(0x55, OpPrefix.None, 'LD D,L', 1, 4, 4, '- - - -'),
  new InstructionInfo(0x56, OpPrefix.None, 'LD D,(HL)', 1, 8, 8, '- - - -'),
  new InstructionInfo(0x57, OpPrefix.None, 'LD D,A', 1, 4, 4, '- - - -'),
  new InstructionInfo(0x58, OpPrefix.None, 'LD E,B', 1, 4, 4, '- - - -'),
  new InstructionInfo(0x59, OpPrefix.None, 'LD E,C', 1, 4, 4, '- - - -'),
  new InstructionInfo(0x5A, OpPrefix.None, 'LD E,D', 1, 4, 4, '- - - -'),
  new InstructionInfo(0x5B, OpPrefix.None, 'LD E,E', 1, 4, 4, '- - - -'),
  new InstructionInfo(0x5C, OpPrefix.None, 'LD E,H', 1, 4, 4, '- - - -'),
  new InstructionInfo(0x5D, OpPrefix.None, 'LD E,L', 1, 4, 4, '- - - -'),
  new InstructionInfo(0x5E, OpPrefix.None, 'LD E,(HL)', 1, 8, 8, '- - - -'),
  new InstructionInfo(0x5F, OpPrefix.None, 'LD E,A', 1, 4, 4, '- - - -'),
  new InstructionInfo(0x60, OpPrefix.None, 'LD H,B', 1, 4, 4, '- - - -'),
  new InstructionInfo(0x61, OpPrefix.None, 'LD H,C', 1, 4, 4, '- - - -'),
  new InstructionInfo(0x62, OpPrefix.None, 'LD H,D', 1, 4, 4, '- - - -'),
  new InstructionInfo(0x63, OpPrefix.None, 'LD H,E', 1, 4, 4, '- - - -'),
  new InstructionInfo(0x64, OpPrefix.None, 'LD H,H', 1, 4, 4, '- - - -'),
  new InstructionInfo(0x65, OpPrefix.None, 'LD H,L', 1, 4, 4, '- - - -'),
  new InstructionInfo(0x66, OpPrefix.None, 'LD H,(HL)', 1, 8, 8, '- - - -'),
  new InstructionInfo(0x67, OpPrefix.None, 'LD H,A', 1, 4, 4, '- - - -'),
  new InstructionInfo(0x68, OpPrefix.None, 'LD L,B', 1, 4, 4, '- - - -'),
  new InstructionInfo(0x69, OpPrefix.None, 'LD L,C', 1, 4, 4, '- - - -'),
  new InstructionInfo(0x6A, OpPrefix.None, 'LD L,D', 1, 4, 4, '- - - -'),
  new InstructionInfo(0x6B, OpPrefix.None, 'LD L,E', 1, 4, 4, '- - - -'),
  new InstructionInfo(0x6C, OpPrefix.None, 'LD L,H', 1, 4, 4, '- - - -'),
  new InstructionInfo(0x6D, OpPrefix.None, 'LD L,L', 1, 4, 4, '- - - -'),
  new InstructionInfo(0x6E, OpPrefix.None, 'LD L,(HL)', 1, 8, 8, '- - - -'),
  new InstructionInfo(0x6F, OpPrefix.None, 'LD L,A', 1, 4, 4, '- - - -'),
  new InstructionInfo(0x70, OpPrefix.None, 'LD (HL),B', 1, 8, 8, '- - - -'),
  new InstructionInfo(0x71, OpPrefix.None, 'LD (HL),C', 1, 8, 8, '- - - -'),
  new InstructionInfo(0x72, OpPrefix.None, 'LD (HL),D', 1, 8, 8, '- - - -'),
  new InstructionInfo(0x73, OpPrefix.None, 'LD (HL),E', 1, 8, 8, '- - - -'),
  new InstructionInfo(0x74, OpPrefix.None, 'LD (HL),H', 1, 8, 8, '- - - -'),
  new InstructionInfo(0x75, OpPrefix.None, 'LD (HL),L', 1, 8, 8, '- - - -'),
  new InstructionInfo(0x76, OpPrefix.None, 'HALT', 1, 4, 4, '- - - -'),
  new InstructionInfo(0x77, OpPrefix.None, 'LD (HL),A', 1, 8, 8, '- - - -'),
  new InstructionInfo(0x78, OpPrefix.None, 'LD A,B', 1, 4, 4, '- - - -'),
  new InstructionInfo(0x79, OpPrefix.None, 'LD A,C', 1, 4, 4, '- - - -'),
  new InstructionInfo(0x7A, OpPrefix.None, 'LD A,D', 1, 4, 4, '- - - -'),
  new InstructionInfo(0x7B, OpPrefix.None, 'LD A,E', 1, 4, 4, '- - - -'),
  new InstructionInfo(0x7C, OpPrefix.None, 'LD A,H', 1, 4, 4, '- - - -'),
  new InstructionInfo(0x7D, OpPrefix.None, 'LD A,L', 1, 4, 4, '- - - -'),
  new InstructionInfo(0x7E, OpPrefix.None, 'LD A,(HL)', 1, 8, 8, '- - - -'),
  new InstructionInfo(0x7F, OpPrefix.None, 'LD A,A', 1, 4, 4, '- - - -'),
  new InstructionInfo(0x80, OpPrefix.None, 'ADD A,B', 1, 4, 4, 'Z 0 H C'),
  new InstructionInfo(0x81, OpPrefix.None, 'ADD A,C', 1, 4, 4, 'Z 0 H C'),
  new InstructionInfo(0x82, OpPrefix.None, 'ADD A,D', 1, 4, 4, 'Z 0 H C'),
  new InstructionInfo(0x83, OpPrefix.None, 'ADD A,E', 1, 4, 4, 'Z 0 H C'),
  new InstructionInfo(0x84, OpPrefix.None, 'ADD A,H', 1, 4, 4, 'Z 0 H C'),
  new InstructionInfo(0x85, OpPrefix.None, 'ADD A,L', 1, 4, 4, 'Z 0 H C'),
  new InstructionInfo(0x86, OpPrefix.None, 'ADD A,(HL)', 1, 8, 8, 'Z 0 H C'),
  new InstructionInfo(0x87, OpPrefix.None, 'ADD A,A', 1, 4, 4, 'Z 0 H C'),
  new InstructionInfo(0x88, OpPrefix.None, 'ADC A,B', 1, 4, 4, 'Z 0 H C'),
  new InstructionInfo(0x89, OpPrefix.None, 'ADC A,C', 1, 4, 4, 'Z 0 H C'),
  new InstructionInfo(0x8A, OpPrefix.None, 'ADC A,D', 1, 4, 4, 'Z 0 H C'),
  new InstructionInfo(0x8B, OpPrefix.None, 'ADC A,E', 1, 4, 4, 'Z 0 H C'),
  new InstructionInfo(0x8C, OpPrefix.None, 'ADC A,H', 1, 4, 4, 'Z 0 H C'),
  new InstructionInfo(0x8D, OpPrefix.None, 'ADC A,L', 1, 4, 4, 'Z 0 H C'),
  new InstructionInfo(0x8E, OpPrefix.None, 'ADC A,(HL)', 1, 8, 8, 'Z 0 H C'),
  new InstructionInfo(0x8F, OpPrefix.None, 'ADC A,A', 1, 4, 4, 'Z 0 H C'),
  new InstructionInfo(0x90, OpPrefix.None, 'SUB B', 1, 4, 4, 'Z 1 H C'),
  new InstructionInfo(0x91, OpPrefix.None, 'SUB C', 1, 4, 4, 'Z 1 H C'),
  new InstructionInfo(0x92, OpPrefix.None, 'SUB D', 1, 4, 4, 'Z 1 H C'),
  new InstructionInfo(0x93, OpPrefix.None, 'SUB E', 1, 4, 4, 'Z 1 H C'),
  new InstructionInfo(0x94, OpPrefix.None, 'SUB H', 1, 4, 4, 'Z 1 H C'),
  new InstructionInfo(0x95, OpPrefix.None, 'SUB L', 1, 4, 4, 'Z 1 H C'),
  new InstructionInfo(0x96, OpPrefix.None, 'SUB (HL)', 1, 8, 8, 'Z 1 H C'),
  new InstructionInfo(0x97, OpPrefix.None, 'SUB A', 1, 4, 4, 'Z 1 H C'),
  new InstructionInfo(0x98, OpPrefix.None, 'SBC A,B', 1, 4, 4, 'Z 1 H C'),
  new InstructionInfo(0x99, OpPrefix.None, 'SBC A,C', 1, 4, 4, 'Z 1 H C'),
  new InstructionInfo(0x9A, OpPrefix.None, 'SBC A,D', 1, 4, 4, 'Z 1 H C'),
  new InstructionInfo(0x9B, OpPrefix.None, 'SBC A,E', 1, 4, 4, 'Z 1 H C'),
  new InstructionInfo(0x9C, OpPrefix.None, 'SBC A,H', 1, 4, 4, 'Z 1 H C'),
  new InstructionInfo(0x9D, OpPrefix.None, 'SBC A,L', 1, 4, 4, 'Z 1 H C'),
  new InstructionInfo(0x9E, OpPrefix.None, 'SBC A,(HL)', 1, 8, 8, 'Z 1 H C'),
  new InstructionInfo(0x9F, OpPrefix.None, 'SBC A,A', 1, 4, 4, 'Z 1 H C'),
  new InstructionInfo(0xA0, OpPrefix.None, 'AND B', 1, 4, 4, 'Z 0 1 0'),
  new InstructionInfo(0xA1, OpPrefix.None, 'AND C', 1, 4, 4, 'Z 0 1 0'),
  new InstructionInfo(0xA2, OpPrefix.None, 'AND D', 1, 4, 4, 'Z 0 1 0'),
  new InstructionInfo(0xA3, OpPrefix.None, 'AND E', 1, 4, 4, 'Z 0 1 0'),
  new InstructionInfo(0xA4, OpPrefix.None, 'AND H', 1, 4, 4, 'Z 0 1 0'),
  new InstructionInfo(0xA5, OpPrefix.None, 'AND L', 1, 4, 4, 'Z 0 1 0'),
  new InstructionInfo(0xA6, OpPrefix.None, 'AND (HL)', 1, 8, 8, 'Z 0 1 0'),
  new InstructionInfo(0xA7, OpPrefix.None, 'AND A', 1, 4, 4, 'Z 0 1 0'),
  new InstructionInfo(0xA8, OpPrefix.None, 'XOR B', 1, 4, 4, 'Z 0 0 0'),
  new InstructionInfo(0xA9, OpPrefix.None, 'XOR C', 1, 4, 4, 'Z 0 0 0'),
  new InstructionInfo(0xAA, OpPrefix.None, 'XOR D', 1, 4, 4, 'Z 0 0 0'),
  new InstructionInfo(0xAB, OpPrefix.None, 'XOR E', 1, 4, 4, 'Z 0 0 0'),
  new InstructionInfo(0xAC, OpPrefix.None, 'XOR H', 1, 4, 4, 'Z 0 0 0'),
  new InstructionInfo(0xAD, OpPrefix.None, 'XOR L', 1, 4, 4, 'Z 0 0 0'),
  new InstructionInfo(0xAE, OpPrefix.None, 'XOR (HL)', 1, 8, 8, 'Z 0 0 0'),
  new InstructionInfo(0xAF, OpPrefix.None, 'XOR A', 1, 4, 4, 'Z 0 0 0'),
  new InstructionInfo(0xB0, OpPrefix.None, 'OR B', 1, 4, 4, 'Z 0 0 0'),
  new InstructionInfo(0xB1, OpPrefix.None, 'OR C', 1, 4, 4, 'Z 0 0 0'),
  new InstructionInfo(0xB2, OpPrefix.None, 'OR D', 1, 4, 4, 'Z 0 0 0'),
  new InstructionInfo(0xB3, OpPrefix.None, 'OR E', 1, 4, 4, 'Z 0 0 0'),
  new InstructionInfo(0xB4, OpPrefix.None, 'OR H', 1, 4, 4, 'Z 0 0 0'),
  new InstructionInfo(0xB5, OpPrefix.None, 'OR L', 1, 4, 4, 'Z 0 0 0'),
  new InstructionInfo(0xB6, OpPrefix.None, 'OR (HL)', 1, 8, 8, 'Z 0 0 0'),
  new InstructionInfo(0xB7, OpPrefix.None, 'OR A', 1, 4, 4, 'Z 0 0 0'),
  new InstructionInfo(0xB8, OpPrefix.None, 'CP B', 1, 4, 4, 'Z 1 H C'),
  new InstructionInfo(0xB9, OpPrefix.None, 'CP C', 1, 4, 4, 'Z 1 H C'),
  new InstructionInfo(0xBA, OpPrefix.None, 'CP D', 1, 4, 4, 'Z 1 H C'),
  new InstructionInfo(0xBB, OpPrefix.None, 'CP E', 1, 4, 4, 'Z 1 H C'),
  new InstructionInfo(0xBC, OpPrefix.None, 'CP H', 1, 4, 4, 'Z 1 H C'),
  new InstructionInfo(0xBD, OpPrefix.None, 'CP L', 1, 4, 4, 'Z 1 H C'),
  new InstructionInfo(0xBE, OpPrefix.None, 'CP (HL)', 1, 8, 8, 'Z 1 H C'),
  new InstructionInfo(0xBF, OpPrefix.None, 'CP A', 1, 4, 4, 'Z 1 H C'),
  new InstructionInfo(0xC0, OpPrefix.None, 'RET NZ', 1, 20, 8, '- - - -'),
  new InstructionInfo(0xC1, OpPrefix.None, 'POP BC', 1, 12, 12, '- - - -'),
  new InstructionInfo(0xC2, OpPrefix.None, 'JP NZ,a16', 3, 16, 12, '- - - -'),
  new InstructionInfo(0xC3, OpPrefix.None, 'JP a16', 3, 16, 16, '- - - -'),
  new InstructionInfo(0xC4, OpPrefix.None, 'CALL NZ,a16', 3, 24, 12, '- - - -'),
  new InstructionInfo(0xC5, OpPrefix.None, 'PUSH BC', 1, 16, 16, '- - - -'),
  new InstructionInfo(0xC6, OpPrefix.None, 'ADD A,d8', 2, 8, 8, 'Z 0 H C'),
  new InstructionInfo(0xC7, OpPrefix.None, 'RST 00H', 1, 16, 16, '- - - -'),
  new InstructionInfo(0xC8, OpPrefix.None, 'RET Z', 1, 20, 8, '- - - -'),
  new InstructionInfo(0xC9, OpPrefix.None, 'RET', 1, 16, 16, '- - - -'),
  new InstructionInfo(0xCA, OpPrefix.None, 'JP Z,a16', 3, 16, 12, '- - - -'),
  new InstructionInfo(0xCB, OpPrefix.None, '0xCB: PREFIX', 1, 4, 4, '- - - -'),
  new InstructionInfo(0xCC, OpPrefix.None, 'CALL Z,a16', 3, 24, 12, '- - - -'),
  new InstructionInfo(0xCD, OpPrefix.None, 'CALL a16', 3, 24, 24, '- - - -'),
  new InstructionInfo(0xCE, OpPrefix.None, 'ADC A,d8', 2, 8, 8, 'Z 0 H C'),
  new InstructionInfo(0xCF, OpPrefix.None, 'RST 08H', 1, 16, 16, '- - - -'),
  new InstructionInfo(0xD0, OpPrefix.None, 'RET NC', 1, 20, 8, '- - - -'),
  new InstructionInfo(0xD1, OpPrefix.None, 'POP DE', 1, 12, 12, '- - - -'),
  new InstructionInfo(0xD2, OpPrefix.None, 'JP NC,a16', 3, 16, 12, '- - - -'),
  new InstructionInfo(0xD3, OpPrefix.None, '0xD3: N/A', 1, 4, 4, '- - - -'),
  new InstructionInfo(0xD4, OpPrefix.None, 'CALL NC,a16', 3, 24, 12, '- - - -'),
  new InstructionInfo(0xD5, OpPrefix.None, 'PUSH DE', 1, 16, 16, '- - - -'),
  new InstructionInfo(0xD6, OpPrefix.None, 'SUB d8', 2, 8, 8, 'Z 1 H C'),
  new InstructionInfo(0xD7, OpPrefix.None, 'RST 10H', 1, 16, 16, '- - - -'),
  new InstructionInfo(0xD8, OpPrefix.None, 'RET C', 1, 20, 8, '- - - -'),
  new InstructionInfo(0xD9, OpPrefix.None, 'RETI', 1, 16, 16, '- - - -'),
  new InstructionInfo(0xDA, OpPrefix.None, 'JP C,a16', 3, 16, 12, '- - - -'),
  new InstructionInfo(0xDB, OpPrefix.None, '0xDB: N/A', 1, 4, 4, '- - - -'),
  new InstructionInfo(0xDC, OpPrefix.None, 'CALL C,a16', 3, 24, 12, '- - - -'),
  new InstructionInfo(0xDD, OpPrefix.None, '0xDD: N/A', 1, 4, 4, '- - - -'),
  new InstructionInfo(0xDE, OpPrefix.None, 'SBC A,d8', 2, 8, 8, 'Z 1 H C'),
  new InstructionInfo(0xDF, OpPrefix.None, 'RST 18H', 1, 16, 16, '- - - -'),
  new InstructionInfo(0xE0, OpPrefix.None, 'LDH (a8),A', 2, 12, 12, '- - - -'),
  new InstructionInfo(0xE1, OpPrefix.None, 'POP HL', 1, 12, 12, '- - - -'),
  new InstructionInfo(0xE2, OpPrefix.None, 'LD (C),A', 2, 8, 8, '- - - -'),
  new InstructionInfo(0xE3, OpPrefix.None, '0xE3: N/A', 1, 4, 4, '- - - -'),
  new InstructionInfo(0xE4, OpPrefix.None, '0xE4: N/A', 1, 4, 4, '- - - -'),
  new InstructionInfo(0xE5, OpPrefix.None, 'PUSH HL', 1, 16, 16, '- - - -'),
  new InstructionInfo(0xE6, OpPrefix.None, 'AND d8', 2, 8, 8, 'Z 0 1 0'),
  new InstructionInfo(0xE7, OpPrefix.None, 'RST 20H', 1, 16, 16, '- - - -'),
  new InstructionInfo(0xE8, OpPrefix.None, 'ADD SP,r8', 2, 16, 16, '0 0 H C'),
  new InstructionInfo(0xE9, OpPrefix.None, 'JP (HL)', 1, 4, 4, '- - - -'),
  new InstructionInfo(0xEA, OpPrefix.None, 'LD (a16),A', 3, 16, 16, '- - - -'),
  new InstructionInfo(0xEB, OpPrefix.None, '0xEB: N/A', 1, 4, 4, '- - - -'),
  new InstructionInfo(0xEC, OpPrefix.None, '0xEC: N/A', 1, 4, 4, '- - - -'),
  new InstructionInfo(0xED, OpPrefix.None, '0xED: N/A', 1, 4, 4, '- - - -'),
  new InstructionInfo(0xEE, OpPrefix.None, 'XOR d8', 2, 8, 8, 'Z 0 0 0'),
  new InstructionInfo(0xEF, OpPrefix.None, 'RST 28H', 1, 16, 16, '- - - -'),
  new InstructionInfo(0xF0, OpPrefix.None, 'LDH A,(a8)', 2, 12, 12, '- - - -'),
  new InstructionInfo(0xF1, OpPrefix.None, 'POP AF', 1, 12, 12, 'Z N H C'),
  new InstructionInfo(0xF2, OpPrefix.None, 'LD A,(C)', 2, 8, 8, '- - - -'),
  new InstructionInfo(0xF3, OpPrefix.None, 'DI', 1, 4, 4, '- - - -'),
  new InstructionInfo(0xF4, OpPrefix.None, '0xF4: N/A', 1, 4, 4, '- - - -'),
  new InstructionInfo(0xF5, OpPrefix.None, 'PUSH AF', 1, 16, 16, '- - - -'),
  new InstructionInfo(0xF6, OpPrefix.None, 'OR d8', 2, 8, 8, 'Z 0 0 0'),
  new InstructionInfo(0xF7, OpPrefix.None, 'RST 30H', 1, 16, 16, '- - - -'),
  new InstructionInfo(0xF8, OpPrefix.None, 'LD HL,SP+r8', 2, 12, 12, '0 0 H C'),
  new InstructionInfo(0xF9, OpPrefix.None, 'LD SP,HL', 1, 8, 8, '- - - -'),
  new InstructionInfo(0xFA, OpPrefix.None, 'LD A,(a16)', 3, 16, 16, '- - - -'),
  new InstructionInfo(0xFB, OpPrefix.None, 'EI', 1, 4, 4, '- - - -'),
  new InstructionInfo(0xFC, OpPrefix.None, '0xFC: N/A', 1, 4, 4, '- - - -'),
  new InstructionInfo(0xFD, OpPrefix.None, '0xFD: N/A', 1, 4, 4, '- - - -'),
  new InstructionInfo(0xFE, OpPrefix.None, 'CP d8', 2, 8, 8, 'Z 1 H C'),
  new InstructionInfo(0xFF, OpPrefix.None, 'RST 38H', 1, 16, 16, '- - - -')
]);

final instInfos_CB = new List<InstructionInfo>.unmodifiable([
  new InstructionInfo(0x00, OpPrefix.CB, 'RLC B', 2, 8, 8, 'Z 0 0 C'),
  new InstructionInfo(0x01, OpPrefix.CB, 'RLC C', 2, 8, 8, 'Z 0 0 C'),
  new InstructionInfo(0x02, OpPrefix.CB, 'RLC D', 2, 8, 8, 'Z 0 0 C'),
  new InstructionInfo(0x03, OpPrefix.CB, 'RLC E', 2, 8, 8, 'Z 0 0 C'),
  new InstructionInfo(0x04, OpPrefix.CB, 'RLC H', 2, 8, 8, 'Z 0 0 C'),
  new InstructionInfo(0x05, OpPrefix.CB, 'RLC L', 2, 8, 8, 'Z 0 0 C'),
  new InstructionInfo(0x06, OpPrefix.CB, 'RLC (HL)', 2, 16, 16, 'Z 0 0 C'),
  new InstructionInfo(0x07, OpPrefix.CB, 'RLC A', 2, 8, 8, 'Z 0 0 C'),
  new InstructionInfo(0x08, OpPrefix.CB, 'RRC B', 2, 8, 8, 'Z 0 0 C'),
  new InstructionInfo(0x09, OpPrefix.CB, 'RRC C', 2, 8, 8, 'Z 0 0 C'),
  new InstructionInfo(0x0A, OpPrefix.CB, 'RRC D', 2, 8, 8, 'Z 0 0 C'),
  new InstructionInfo(0x0B, OpPrefix.CB, 'RRC E', 2, 8, 8, 'Z 0 0 C'),
  new InstructionInfo(0x0C, OpPrefix.CB, 'RRC H', 2, 8, 8, 'Z 0 0 C'),
  new InstructionInfo(0x0D, OpPrefix.CB, 'RRC L', 2, 8, 8, 'Z 0 0 C'),
  new InstructionInfo(0x0E, OpPrefix.CB, 'RRC (HL)', 2, 16, 16, 'Z 0 0 C'),
  new InstructionInfo(0x0F, OpPrefix.CB, 'RRC A', 2, 8, 8, 'Z 0 0 C'),
  new InstructionInfo(0x10, OpPrefix.CB, 'RL B', 2, 8, 8, 'Z 0 0 C'),
  new InstructionInfo(0x11, OpPrefix.CB, 'RL C', 2, 8, 8, 'Z 0 0 C'),
  new InstructionInfo(0x12, OpPrefix.CB, 'RL D', 2, 8, 8, 'Z 0 0 C'),
  new InstructionInfo(0x13, OpPrefix.CB, 'RL E', 2, 8, 8, 'Z 0 0 C'),
  new InstructionInfo(0x14, OpPrefix.CB, 'RL H', 2, 8, 8, 'Z 0 0 C'),
  new InstructionInfo(0x15, OpPrefix.CB, 'RL L', 2, 8, 8, 'Z 0 0 C'),
  new InstructionInfo(0x16, OpPrefix.CB, 'RL (HL)', 2, 16, 16, 'Z 0 0 C'),
  new InstructionInfo(0x17, OpPrefix.CB, 'RL A', 2, 8, 8, 'Z 0 0 C'),
  new InstructionInfo(0x18, OpPrefix.CB, 'RR B', 2, 8, 8, 'Z 0 0 C'),
  new InstructionInfo(0x19, OpPrefix.CB, 'RR C', 2, 8, 8, 'Z 0 0 C'),
  new InstructionInfo(0x1A, OpPrefix.CB, 'RR D', 2, 8, 8, 'Z 0 0 C'),
  new InstructionInfo(0x1B, OpPrefix.CB, 'RR E', 2, 8, 8, 'Z 0 0 C'),
  new InstructionInfo(0x1C, OpPrefix.CB, 'RR H', 2, 8, 8, 'Z 0 0 C'),
  new InstructionInfo(0x1D, OpPrefix.CB, 'RR L', 2, 8, 8, 'Z 0 0 C'),
  new InstructionInfo(0x1E, OpPrefix.CB, 'RR (HL)', 2, 16, 16, 'Z 0 0 C'),
  new InstructionInfo(0x1F, OpPrefix.CB, 'RR A', 2, 8, 8, 'Z 0 0 C'),
  new InstructionInfo(0x20, OpPrefix.CB, 'SLA B', 2, 8, 8, 'Z 0 0 C'),
  new InstructionInfo(0x21, OpPrefix.CB, 'SLA C', 2, 8, 8, 'Z 0 0 C'),
  new InstructionInfo(0x22, OpPrefix.CB, 'SLA D', 2, 8, 8, 'Z 0 0 C'),
  new InstructionInfo(0x23, OpPrefix.CB, 'SLA E', 2, 8, 8, 'Z 0 0 C'),
  new InstructionInfo(0x24, OpPrefix.CB, 'SLA H', 2, 8, 8, 'Z 0 0 C'),
  new InstructionInfo(0x25, OpPrefix.CB, 'SLA L', 2, 8, 8, 'Z 0 0 C'),
  new InstructionInfo(0x26, OpPrefix.CB, 'SLA (HL)', 2, 16, 16, 'Z 0 0 C'),
  new InstructionInfo(0x27, OpPrefix.CB, 'SLA A', 2, 8, 8, 'Z 0 0 C'),
  new InstructionInfo(0x28, OpPrefix.CB, 'SRA B', 2, 8, 8, 'Z 0 0 0'),
  new InstructionInfo(0x29, OpPrefix.CB, 'SRA C', 2, 8, 8, 'Z 0 0 0'),
  new InstructionInfo(0x2A, OpPrefix.CB, 'SRA D', 2, 8, 8, 'Z 0 0 0'),
  new InstructionInfo(0x2B, OpPrefix.CB, 'SRA E', 2, 8, 8, 'Z 0 0 0'),
  new InstructionInfo(0x2C, OpPrefix.CB, 'SRA H', 2, 8, 8, 'Z 0 0 0'),
  new InstructionInfo(0x2D, OpPrefix.CB, 'SRA L', 2, 8, 8, 'Z 0 0 0'),
  new InstructionInfo(0x2E, OpPrefix.CB, 'SRA (HL)', 2, 16, 16, 'Z 0 0 0'),
  new InstructionInfo(0x2F, OpPrefix.CB, 'SRA A', 2, 8, 8, 'Z 0 0 0'),
  new InstructionInfo(0x30, OpPrefix.CB, 'SWAP B', 2, 8, 8, 'Z 0 0 0'),
  new InstructionInfo(0x31, OpPrefix.CB, 'SWAP C', 2, 8, 8, 'Z 0 0 0'),
  new InstructionInfo(0x32, OpPrefix.CB, 'SWAP D', 2, 8, 8, 'Z 0 0 0'),
  new InstructionInfo(0x33, OpPrefix.CB, 'SWAP E', 2, 8, 8, 'Z 0 0 0'),
  new InstructionInfo(0x34, OpPrefix.CB, 'SWAP H', 2, 8, 8, 'Z 0 0 0'),
  new InstructionInfo(0x35, OpPrefix.CB, 'SWAP L', 2, 8, 8, 'Z 0 0 0'),
  new InstructionInfo(0x36, OpPrefix.CB, 'SWAP (HL)', 2, 16, 16, 'Z 0 0 0'),
  new InstructionInfo(0x37, OpPrefix.CB, 'SWAP A', 2, 8, 8, 'Z 0 0 0'),
  new InstructionInfo(0x38, OpPrefix.CB, 'SRL B', 2, 8, 8, 'Z 0 0 C'),
  new InstructionInfo(0x39, OpPrefix.CB, 'SRL C', 2, 8, 8, 'Z 0 0 C'),
  new InstructionInfo(0x3A, OpPrefix.CB, 'SRL D', 2, 8, 8, 'Z 0 0 C'),
  new InstructionInfo(0x3B, OpPrefix.CB, 'SRL E', 2, 8, 8, 'Z 0 0 C'),
  new InstructionInfo(0x3C, OpPrefix.CB, 'SRL H', 2, 8, 8, 'Z 0 0 C'),
  new InstructionInfo(0x3D, OpPrefix.CB, 'SRL L', 2, 8, 8, 'Z 0 0 C'),
  new InstructionInfo(0x3E, OpPrefix.CB, 'SRL (HL)', 2, 16, 16, 'Z 0 0 C'),
  new InstructionInfo(0x3F, OpPrefix.CB, 'SRL A', 2, 8, 8, 'Z 0 0 C'),
  new InstructionInfo(0x40, OpPrefix.CB, 'BIT 0,B', 2, 8, 8, 'Z 0 1 -'),
  new InstructionInfo(0x41, OpPrefix.CB, 'BIT 0,C', 2, 8, 8, 'Z 0 1 -'),
  new InstructionInfo(0x42, OpPrefix.CB, 'BIT 0,D', 2, 8, 8, 'Z 0 1 -'),
  new InstructionInfo(0x43, OpPrefix.CB, 'BIT 0,E', 2, 8, 8, 'Z 0 1 -'),
  new InstructionInfo(0x44, OpPrefix.CB, 'BIT 0,H', 2, 8, 8, 'Z 0 1 -'),
  new InstructionInfo(0x45, OpPrefix.CB, 'BIT 0,L', 2, 8, 8, 'Z 0 1 -'),
  new InstructionInfo(0x46, OpPrefix.CB, 'BIT 0,(HL)', 2, 16, 16, 'Z 0 1 -'),
  new InstructionInfo(0x47, OpPrefix.CB, 'BIT 0,A', 2, 8, 8, 'Z 0 1 -'),
  new InstructionInfo(0x48, OpPrefix.CB, 'BIT 1,B', 2, 8, 8, 'Z 0 1 -'),
  new InstructionInfo(0x49, OpPrefix.CB, 'BIT 1,C', 2, 8, 8, 'Z 0 1 -'),
  new InstructionInfo(0x4A, OpPrefix.CB, 'BIT 1,D', 2, 8, 8, 'Z 0 1 -'),
  new InstructionInfo(0x4B, OpPrefix.CB, 'BIT 1,E', 2, 8, 8, 'Z 0 1 -'),
  new InstructionInfo(0x4C, OpPrefix.CB, 'BIT 1,H', 2, 8, 8, 'Z 0 1 -'),
  new InstructionInfo(0x4D, OpPrefix.CB, 'BIT 1,L', 2, 8, 8, 'Z 0 1 -'),
  new InstructionInfo(0x4E, OpPrefix.CB, 'BIT 1,(HL)', 2, 16, 16, 'Z 0 1 -'),
  new InstructionInfo(0x4F, OpPrefix.CB, 'BIT 1,A', 2, 8, 8, 'Z 0 1 -'),
  new InstructionInfo(0x50, OpPrefix.CB, 'BIT 2,B', 2, 8, 8, 'Z 0 1 -'),
  new InstructionInfo(0x51, OpPrefix.CB, 'BIT 2,C', 2, 8, 8, 'Z 0 1 -'),
  new InstructionInfo(0x52, OpPrefix.CB, 'BIT 2,D', 2, 8, 8, 'Z 0 1 -'),
  new InstructionInfo(0x53, OpPrefix.CB, 'BIT 2,E', 2, 8, 8, 'Z 0 1 -'),
  new InstructionInfo(0x54, OpPrefix.CB, 'BIT 2,H', 2, 8, 8, 'Z 0 1 -'),
  new InstructionInfo(0x55, OpPrefix.CB, 'BIT 2,L', 2, 8, 8, 'Z 0 1 -'),
  new InstructionInfo(0x56, OpPrefix.CB, 'BIT 2,(HL)', 2, 16, 16, 'Z 0 1 -'),
  new InstructionInfo(0x57, OpPrefix.CB, 'BIT 2,A', 2, 8, 8, 'Z 0 1 -'),
  new InstructionInfo(0x58, OpPrefix.CB, 'BIT 3,B', 2, 8, 8, 'Z 0 1 -'),
  new InstructionInfo(0x59, OpPrefix.CB, 'BIT 3,C', 2, 8, 8, 'Z 0 1 -'),
  new InstructionInfo(0x5A, OpPrefix.CB, 'BIT 3,D', 2, 8, 8, 'Z 0 1 -'),
  new InstructionInfo(0x5B, OpPrefix.CB, 'BIT 3,E', 2, 8, 8, 'Z 0 1 -'),
  new InstructionInfo(0x5C, OpPrefix.CB, 'BIT 3,H', 2, 8, 8, 'Z 0 1 -'),
  new InstructionInfo(0x5D, OpPrefix.CB, 'BIT 3,L', 2, 8, 8, 'Z 0 1 -'),
  new InstructionInfo(0x5E, OpPrefix.CB, 'BIT 3,(HL)', 2, 16, 16, 'Z 0 1 -'),
  new InstructionInfo(0x5F, OpPrefix.CB, 'BIT 3,A', 2, 8, 8, 'Z 0 1 -'),
  new InstructionInfo(0x60, OpPrefix.CB, 'BIT 4,B', 2, 8, 8, 'Z 0 1 -'),
  new InstructionInfo(0x61, OpPrefix.CB, 'BIT 4,C', 2, 8, 8, 'Z 0 1 -'),
  new InstructionInfo(0x62, OpPrefix.CB, 'BIT 4,D', 2, 8, 8, 'Z 0 1 -'),
  new InstructionInfo(0x63, OpPrefix.CB, 'BIT 4,E', 2, 8, 8, 'Z 0 1 -'),
  new InstructionInfo(0x64, OpPrefix.CB, 'BIT 4,H', 2, 8, 8, 'Z 0 1 -'),
  new InstructionInfo(0x65, OpPrefix.CB, 'BIT 4,L', 2, 8, 8, 'Z 0 1 -'),
  new InstructionInfo(0x66, OpPrefix.CB, 'BIT 4,(HL)', 2, 16, 16, 'Z 0 1 -'),
  new InstructionInfo(0x67, OpPrefix.CB, 'BIT 4,A', 2, 8, 8, 'Z 0 1 -'),
  new InstructionInfo(0x68, OpPrefix.CB, 'BIT 5,B', 2, 8, 8, 'Z 0 1 -'),
  new InstructionInfo(0x69, OpPrefix.CB, 'BIT 5,C', 2, 8, 8, 'Z 0 1 -'),
  new InstructionInfo(0x6A, OpPrefix.CB, 'BIT 5,D', 2, 8, 8, 'Z 0 1 -'),
  new InstructionInfo(0x6B, OpPrefix.CB, 'BIT 5,E', 2, 8, 8, 'Z 0 1 -'),
  new InstructionInfo(0x6C, OpPrefix.CB, 'BIT 5,H', 2, 8, 8, 'Z 0 1 -'),
  new InstructionInfo(0x6D, OpPrefix.CB, 'BIT 5,L', 2, 8, 8, 'Z 0 1 -'),
  new InstructionInfo(0x6E, OpPrefix.CB, 'BIT 5,(HL)', 2, 16, 16, 'Z 0 1 -'),
  new InstructionInfo(0x6F, OpPrefix.CB, 'BIT 5,A', 2, 8, 8, 'Z 0 1 -'),
  new InstructionInfo(0x70, OpPrefix.CB, 'BIT 6,B', 2, 8, 8, 'Z 0 1 -'),
  new InstructionInfo(0x71, OpPrefix.CB, 'BIT 6,C', 2, 8, 8, 'Z 0 1 -'),
  new InstructionInfo(0x72, OpPrefix.CB, 'BIT 6,D', 2, 8, 8, 'Z 0 1 -'),
  new InstructionInfo(0x73, OpPrefix.CB, 'BIT 6,E', 2, 8, 8, 'Z 0 1 -'),
  new InstructionInfo(0x74, OpPrefix.CB, 'BIT 6,H', 2, 8, 8, 'Z 0 1 -'),
  new InstructionInfo(0x75, OpPrefix.CB, 'BIT 6,L', 2, 8, 8, 'Z 0 1 -'),
  new InstructionInfo(0x76, OpPrefix.CB, 'BIT 6,(HL)', 2, 16, 16, 'Z 0 1 -'),
  new InstructionInfo(0x77, OpPrefix.CB, 'BIT 6,A', 2, 8, 8, 'Z 0 1 -'),
  new InstructionInfo(0x78, OpPrefix.CB, 'BIT 7,B', 2, 8, 8, 'Z 0 1 -'),
  new InstructionInfo(0x79, OpPrefix.CB, 'BIT 7,C', 2, 8, 8, 'Z 0 1 -'),
  new InstructionInfo(0x7A, OpPrefix.CB, 'BIT 7,D', 2, 8, 8, 'Z 0 1 -'),
  new InstructionInfo(0x7B, OpPrefix.CB, 'BIT 7,E', 2, 8, 8, 'Z 0 1 -'),
  new InstructionInfo(0x7C, OpPrefix.CB, 'BIT 7,H', 2, 8, 8, 'Z 0 1 -'),
  new InstructionInfo(0x7D, OpPrefix.CB, 'BIT 7,L', 2, 8, 8, 'Z 0 1 -'),
  new InstructionInfo(0x7E, OpPrefix.CB, 'BIT 7,(HL)', 2, 16, 16, 'Z 0 1 -'),
  new InstructionInfo(0x7F, OpPrefix.CB, 'BIT 7,A', 2, 8, 8, 'Z 0 1 -'),
  new InstructionInfo(0x80, OpPrefix.CB, 'RES 0,B', 2, 8, 8, '- - - -'),
  new InstructionInfo(0x81, OpPrefix.CB, 'RES 0,C', 2, 8, 8, '- - - -'),
  new InstructionInfo(0x82, OpPrefix.CB, 'RES 0,D', 2, 8, 8, '- - - -'),
  new InstructionInfo(0x83, OpPrefix.CB, 'RES 0,E', 2, 8, 8, '- - - -'),
  new InstructionInfo(0x84, OpPrefix.CB, 'RES 0,H', 2, 8, 8, '- - - -'),
  new InstructionInfo(0x85, OpPrefix.CB, 'RES 0,L', 2, 8, 8, '- - - -'),
  new InstructionInfo(0x86, OpPrefix.CB, 'RES 0,(HL)', 2, 16, 16, '- - - -'),
  new InstructionInfo(0x87, OpPrefix.CB, 'RES 0,A', 2, 8, 8, '- - - -'),
  new InstructionInfo(0x88, OpPrefix.CB, 'RES 1,B', 2, 8, 8, '- - - -'),
  new InstructionInfo(0x89, OpPrefix.CB, 'RES 1,C', 2, 8, 8, '- - - -'),
  new InstructionInfo(0x8A, OpPrefix.CB, 'RES 1,D', 2, 8, 8, '- - - -'),
  new InstructionInfo(0x8B, OpPrefix.CB, 'RES 1,E', 2, 8, 8, '- - - -'),
  new InstructionInfo(0x8C, OpPrefix.CB, 'RES 1,H', 2, 8, 8, '- - - -'),
  new InstructionInfo(0x8D, OpPrefix.CB, 'RES 1,L', 2, 8, 8, '- - - -'),
  new InstructionInfo(0x8E, OpPrefix.CB, 'RES 1,(HL)', 2, 16, 16, '- - - -'),
  new InstructionInfo(0x8F, OpPrefix.CB, 'RES 1,A', 2, 8, 8, '- - - -'),
  new InstructionInfo(0x90, OpPrefix.CB, 'RES 2,B', 2, 8, 8, '- - - -'),
  new InstructionInfo(0x91, OpPrefix.CB, 'RES 2,C', 2, 8, 8, '- - - -'),
  new InstructionInfo(0x92, OpPrefix.CB, 'RES 2,D', 2, 8, 8, '- - - -'),
  new InstructionInfo(0x93, OpPrefix.CB, 'RES 2,E', 2, 8, 8, '- - - -'),
  new InstructionInfo(0x94, OpPrefix.CB, 'RES 2,H', 2, 8, 8, '- - - -'),
  new InstructionInfo(0x95, OpPrefix.CB, 'RES 2,L', 2, 8, 8, '- - - -'),
  new InstructionInfo(0x96, OpPrefix.CB, 'RES 2,(HL)', 2, 16, 16, '- - - -'),
  new InstructionInfo(0x97, OpPrefix.CB, 'RES 2,A', 2, 8, 8, '- - - -'),
  new InstructionInfo(0x98, OpPrefix.CB, 'RES 3,B', 2, 8, 8, '- - - -'),
  new InstructionInfo(0x99, OpPrefix.CB, 'RES 3,C', 2, 8, 8, '- - - -'),
  new InstructionInfo(0x9A, OpPrefix.CB, 'RES 3,D', 2, 8, 8, '- - - -'),
  new InstructionInfo(0x9B, OpPrefix.CB, 'RES 3,E', 2, 8, 8, '- - - -'),
  new InstructionInfo(0x9C, OpPrefix.CB, 'RES 3,H', 2, 8, 8, '- - - -'),
  new InstructionInfo(0x9D, OpPrefix.CB, 'RES 3,L', 2, 8, 8, '- - - -'),
  new InstructionInfo(0x9E, OpPrefix.CB, 'RES 3,(HL)', 2, 16, 16, '- - - -'),
  new InstructionInfo(0x9F, OpPrefix.CB, 'RES 3,A', 2, 8, 8, '- - - -'),
  new InstructionInfo(0xA0, OpPrefix.CB, 'RES 4,B', 2, 8, 8, '- - - -'),
  new InstructionInfo(0xA1, OpPrefix.CB, 'RES 4,C', 2, 8, 8, '- - - -'),
  new InstructionInfo(0xA2, OpPrefix.CB, 'RES 4,D', 2, 8, 8, '- - - -'),
  new InstructionInfo(0xA3, OpPrefix.CB, 'RES 4,E', 2, 8, 8, '- - - -'),
  new InstructionInfo(0xA4, OpPrefix.CB, 'RES 4,H', 2, 8, 8, '- - - -'),
  new InstructionInfo(0xA5, OpPrefix.CB, 'RES 4,L', 2, 8, 8, '- - - -'),
  new InstructionInfo(0xA6, OpPrefix.CB, 'RES 4,(HL)', 2, 16, 16, '- - - -'),
  new InstructionInfo(0xA7, OpPrefix.CB, 'RES 4,A', 2, 8, 8, '- - - -'),
  new InstructionInfo(0xA8, OpPrefix.CB, 'RES 5,B', 2, 8, 8, '- - - -'),
  new InstructionInfo(0xA9, OpPrefix.CB, 'RES 5,C', 2, 8, 8, '- - - -'),
  new InstructionInfo(0xAA, OpPrefix.CB, 'RES 5,D', 2, 8, 8, '- - - -'),
  new InstructionInfo(0xAB, OpPrefix.CB, 'RES 5,E', 2, 8, 8, '- - - -'),
  new InstructionInfo(0xAC, OpPrefix.CB, 'RES 5,H', 2, 8, 8, '- - - -'),
  new InstructionInfo(0xAD, OpPrefix.CB, 'RES 5,L', 2, 8, 8, '- - - -'),
  new InstructionInfo(0xAE, OpPrefix.CB, 'RES 5,(HL)', 2, 16, 16, '- - - -'),
  new InstructionInfo(0xAF, OpPrefix.CB, 'RES 5,A', 2, 8, 8, '- - - -'),
  new InstructionInfo(0xB0, OpPrefix.CB, 'RES 6,B', 2, 8, 8, '- - - -'),
  new InstructionInfo(0xB1, OpPrefix.CB, 'RES 6,C', 2, 8, 8, '- - - -'),
  new InstructionInfo(0xB2, OpPrefix.CB, 'RES 6,D', 2, 8, 8, '- - - -'),
  new InstructionInfo(0xB3, OpPrefix.CB, 'RES 6,E', 2, 8, 8, '- - - -'),
  new InstructionInfo(0xB4, OpPrefix.CB, 'RES 6,H', 2, 8, 8, '- - - -'),
  new InstructionInfo(0xB5, OpPrefix.CB, 'RES 6,L', 2, 8, 8, '- - - -'),
  new InstructionInfo(0xB6, OpPrefix.CB, 'RES 6,(HL)', 2, 16, 16, '- - - -'),
  new InstructionInfo(0xB7, OpPrefix.CB, 'RES 6,A', 2, 8, 8, '- - - -'),
  new InstructionInfo(0xB8, OpPrefix.CB, 'RES 7,B', 2, 8, 8, '- - - -'),
  new InstructionInfo(0xB9, OpPrefix.CB, 'RES 7,C', 2, 8, 8, '- - - -'),
  new InstructionInfo(0xBA, OpPrefix.CB, 'RES 7,D', 2, 8, 8, '- - - -'),
  new InstructionInfo(0xBB, OpPrefix.CB, 'RES 7,E', 2, 8, 8, '- - - -'),
  new InstructionInfo(0xBC, OpPrefix.CB, 'RES 7,H', 2, 8, 8, '- - - -'),
  new InstructionInfo(0xBD, OpPrefix.CB, 'RES 7,L', 2, 8, 8, '- - - -'),
  new InstructionInfo(0xBE, OpPrefix.CB, 'RES 7,(HL)', 2, 16, 16, '- - - -'),
  new InstructionInfo(0xBF, OpPrefix.CB, 'RES 7,A', 2, 8, 8, '- - - -'),
  new InstructionInfo(0xC0, OpPrefix.CB, 'SET 0,B', 2, 8, 8, '- - - -'),
  new InstructionInfo(0xC1, OpPrefix.CB, 'SET 0,C', 2, 8, 8, '- - - -'),
  new InstructionInfo(0xC2, OpPrefix.CB, 'SET 0,D', 2, 8, 8, '- - - -'),
  new InstructionInfo(0xC3, OpPrefix.CB, 'SET 0,E', 2, 8, 8, '- - - -'),
  new InstructionInfo(0xC4, OpPrefix.CB, 'SET 0,H', 2, 8, 8, '- - - -'),
  new InstructionInfo(0xC5, OpPrefix.CB, 'SET 0,L', 2, 8, 8, '- - - -'),
  new InstructionInfo(0xC6, OpPrefix.CB, 'SET 0,(HL)', 2, 16, 16, '- - - -'),
  new InstructionInfo(0xC7, OpPrefix.CB, 'SET 0,A', 2, 8, 8, '- - - -'),
  new InstructionInfo(0xC8, OpPrefix.CB, 'SET 1,B', 2, 8, 8, '- - - -'),
  new InstructionInfo(0xC9, OpPrefix.CB, 'SET 1,C', 2, 8, 8, '- - - -'),
  new InstructionInfo(0xCA, OpPrefix.CB, 'SET 1,D', 2, 8, 8, '- - - -'),
  new InstructionInfo(0xCB, OpPrefix.CB, 'SET 1,E', 2, 8, 8, '- - - -'),
  new InstructionInfo(0xCC, OpPrefix.CB, 'SET 1,H', 2, 8, 8, '- - - -'),
  new InstructionInfo(0xCD, OpPrefix.CB, 'SET 1,L', 2, 8, 8, '- - - -'),
  new InstructionInfo(0xCE, OpPrefix.CB, 'SET 1,(HL)', 2, 16, 16, '- - - -'),
  new InstructionInfo(0xCF, OpPrefix.CB, 'SET 1,A', 2, 8, 8, '- - - -'),
  new InstructionInfo(0xD0, OpPrefix.CB, 'SET 2,B', 2, 8, 8, '- - - -'),
  new InstructionInfo(0xD1, OpPrefix.CB, 'SET 2,C', 2, 8, 8, '- - - -'),
  new InstructionInfo(0xD2, OpPrefix.CB, 'SET 2,D', 2, 8, 8, '- - - -'),
  new InstructionInfo(0xD3, OpPrefix.CB, 'SET 2,E', 2, 8, 8, '- - - -'),
  new InstructionInfo(0xD4, OpPrefix.CB, 'SET 2,H', 2, 8, 8, '- - - -'),
  new InstructionInfo(0xD5, OpPrefix.CB, 'SET 2,L', 2, 8, 8, '- - - -'),
  new InstructionInfo(0xD6, OpPrefix.CB, 'SET 2,(HL)', 2, 16, 16, '- - - -'),
  new InstructionInfo(0xD7, OpPrefix.CB, 'SET 2,A', 2, 8, 8, '- - - -'),
  new InstructionInfo(0xD8, OpPrefix.CB, 'SET 3,B', 2, 8, 8, '- - - -'),
  new InstructionInfo(0xD9, OpPrefix.CB, 'SET 3,C', 2, 8, 8, '- - - -'),
  new InstructionInfo(0xDA, OpPrefix.CB, 'SET 3,D', 2, 8, 8, '- - - -'),
  new InstructionInfo(0xDB, OpPrefix.CB, 'SET 3,E', 2, 8, 8, '- - - -'),
  new InstructionInfo(0xDC, OpPrefix.CB, 'SET 3,H', 2, 8, 8, '- - - -'),
  new InstructionInfo(0xDD, OpPrefix.CB, 'SET 3,L', 2, 8, 8, '- - - -'),
  new InstructionInfo(0xDE, OpPrefix.CB, 'SET 3,(HL)', 2, 16, 16, '- - - -'),
  new InstructionInfo(0xDF, OpPrefix.CB, 'SET 3,A', 2, 8, 8, '- - - -'),
  new InstructionInfo(0xE0, OpPrefix.CB, 'SET 4,B', 2, 8, 8, '- - - -'),
  new InstructionInfo(0xE1, OpPrefix.CB, 'SET 4,C', 2, 8, 8, '- - - -'),
  new InstructionInfo(0xE2, OpPrefix.CB, 'SET 4,D', 2, 8, 8, '- - - -'),
  new InstructionInfo(0xE3, OpPrefix.CB, 'SET 4,E', 2, 8, 8, '- - - -'),
  new InstructionInfo(0xE4, OpPrefix.CB, 'SET 4,H', 2, 8, 8, '- - - -'),
  new InstructionInfo(0xE5, OpPrefix.CB, 'SET 4,L', 2, 8, 8, '- - - -'),
  new InstructionInfo(0xE6, OpPrefix.CB, 'SET 4,(HL)', 2, 16, 16, '- - - -'),
  new InstructionInfo(0xE7, OpPrefix.CB, 'SET 4,A', 2, 8, 8, '- - - -'),
  new InstructionInfo(0xE8, OpPrefix.CB, 'SET 5,B', 2, 8, 8, '- - - -'),
  new InstructionInfo(0xE9, OpPrefix.CB, 'SET 5,C', 2, 8, 8, '- - - -'),
  new InstructionInfo(0xEA, OpPrefix.CB, 'SET 5,D', 2, 8, 8, '- - - -'),
  new InstructionInfo(0xEB, OpPrefix.CB, 'SET 5,E', 2, 8, 8, '- - - -'),
  new InstructionInfo(0xEC, OpPrefix.CB, 'SET 5,H', 2, 8, 8, '- - - -'),
  new InstructionInfo(0xED, OpPrefix.CB, 'SET 5,L', 2, 8, 8, '- - - -'),
  new InstructionInfo(0xEE, OpPrefix.CB, 'SET 5,(HL)', 2, 16, 16, '- - - -'),
  new InstructionInfo(0xEF, OpPrefix.CB, 'SET 5,A', 2, 8, 8, '- - - -'),
  new InstructionInfo(0xF0, OpPrefix.CB, 'SET 6,B', 2, 8, 8, '- - - -'),
  new InstructionInfo(0xF1, OpPrefix.CB, 'SET 6,C', 2, 8, 8, '- - - -'),
  new InstructionInfo(0xF2, OpPrefix.CB, 'SET 6,D', 2, 8, 8, '- - - -'),
  new InstructionInfo(0xF3, OpPrefix.CB, 'SET 6,E', 2, 8, 8, '- - - -'),
  new InstructionInfo(0xF4, OpPrefix.CB, 'SET 6,H', 2, 8, 8, '- - - -'),
  new InstructionInfo(0xF5, OpPrefix.CB, 'SET 6,L', 2, 8, 8, '- - - -'),
  new InstructionInfo(0xF6, OpPrefix.CB, 'SET 6,(HL)', 2, 16, 16, '- - - -'),
  new InstructionInfo(0xF7, OpPrefix.CB, 'SET 6,A', 2, 8, 8, '- - - -'),
  new InstructionInfo(0xF8, OpPrefix.CB, 'SET 7,B', 2, 8, 8, '- - - -'),
  new InstructionInfo(0xF9, OpPrefix.CB, 'SET 7,C', 2, 8, 8, '- - - -'),
  new InstructionInfo(0xFA, OpPrefix.CB, 'SET 7,D', 2, 8, 8, '- - - -'),
  new InstructionInfo(0xFB, OpPrefix.CB, 'SET 7,E', 2, 8, 8, '- - - -'),
  new InstructionInfo(0xFC, OpPrefix.CB, 'SET 7,H', 2, 8, 8, '- - - -'),
  new InstructionInfo(0xFD, OpPrefix.CB, 'SET 7,L', 2, 8, 8, '- - - -'),
  new InstructionInfo(0xFE, OpPrefix.CB, 'SET 7,(HL)', 2, 16, 16, '- - - -'),
  new InstructionInfo(0xFF, OpPrefix.CB, 'SET 7,A', 2, 8, 8, '- - - -')
]);


/* OLD */

// enum OpCode {
//   NOP,
//   LD_BC_d16,
//   LD_i_BC_A,
//   INC_BC,
//   INC_B,
//   DEC_B,
//   LD_B_d8,
//   RLCA,
//   LD_i_a16_SP,
//   ADD_HL_BC,
//   LD_A_i_BC,
//   DEC_BC,
//   INC_C,
//   DEC_C,
//   LD_C_d8,
//   RRCA,
//   STOP_0,
//   LD_DE_d16,
//   LD_i_DE_A,
//   INC_DE,
//   INC_D,
//   DEC_D,
//   LD_D_d8,
//   RLA,
//   JR_r8,
//   ADD_HL_DE,
//   LD_A_i_DE,
//   DEC_DE,
//   INC_E,
//   DEC_E,
//   LD_E_d8,
//   RRA,
//   JR_NZ_r8,
//   LD_HL_d16,
//   LD_i_HLp_A,
//   INC_HL,
//   INC_H,
//   DEC_H,
//   LD_H_d8,
//   DAA,
//   JR_Z_r8,
//   ADD_HL_HL,
//   LD_A_i_HLp,
//   DEC_HL,
//   INC_L,
//   DEC_L,
//   LD_L_d8,
//   CPL,
//   JR_NC_r8,
//   LD_SP_d16,
//   LD_i_HLm_A,
//   INC_SP,
//   INC_i_HL,
//   DEC_i_HL,
//   LD_i_HL_d8,
//   SCF,
//   JR_C_r8,
//   ADD_HL_SP,
//   LD_A_i_HLm,
//   DEC_SP,
//   INC_A,
//   DEC_A,
//   LD_A_d8,
//   CCF,
//   LD_B_B,
//   LD_B_C,
//   LD_B_D,
//   LD_B_E,
//   LD_B_H,
//   LD_B_L,
//   LD_B_i_HL,
//   LD_B_A,
//   LD_C_B,
//   LD_C_C,
//   LD_C_D,
//   LD_C_E,
//   LD_C_H,
//   LD_C_L,
//   LD_C_i_HL,
//   LD_C_A,
//   LD_D_B,
//   LD_D_C,
//   LD_D_D,
//   LD_D_E,
//   LD_D_H,
//   LD_D_L,
//   LD_D_i_HL,
//   LD_D_A,
//   LD_E_B,
//   LD_E_C,
//   LD_E_D,
//   LD_E_E,
//   LD_E_H,
//   LD_E_L,
//   LD_E_i_HL,
//   LD_E_A,
//   LD_H_B,
//   LD_H_C,
//   LD_H_D,
//   LD_H_E,
//   LD_H_H,
//   LD_H_L,
//   LD_H_i_HL,
//   LD_H_A,
//   LD_L_B,
//   LD_L_C,
//   LD_L_D,
//   LD_L_E,
//   LD_L_H,
//   LD_L_L,
//   LD_L_i_HL,
//   LD_L_A,
//   LD_i_HL_B,
//   LD_i_HL_C,
//   LD_i_HL_D,
//   LD_i_HL_E,
//   LD_i_HL_H,
//   LD_i_HL_L,
//   HALT,
//   LD_i_HL_A,
//   LD_A_B,
//   LD_A_C,
//   LD_A_D,
//   LD_A_E,
//   LD_A_H,
//   LD_A_L,
//   LD_A_i_HL,
//   LD_A_A,
//   ADD_A_B,
//   ADD_A_C,
//   ADD_A_D,
//   ADD_A_E,
//   ADD_A_H,
//   ADD_A_L,
//   ADD_A_i_HL,
//   ADD_A_A,
//   ADC_A_B,
//   ADC_A_C,
//   ADC_A_D,
//   ADC_A_E,
//   ADC_A_H,
//   ADC_A_L,
//   ADC_A_i_HL,
//   ADC_A_A,
//   SUB_B,
//   SUB_C,
//   SUB_D,
//   SUB_E,
//   SUB_H,
//   SUB_L,
//   SUB_i_HL,
//   SUB_A,
//   SBC_A_B,
//   SBC_A_C,
//   SBC_A_D,
//   SBC_A_E,
//   SBC_A_H,
//   SBC_A_L,
//   SBC_A_i_HL,
//   SBC_A_A,
//   AND_B,
//   AND_C,
//   AND_D,
//   AND_E,
//   AND_H,
//   AND_L,
//   AND_i_HL,
//   AND_A,
//   XOR_B,
//   XOR_C,
//   XOR_D,
//   XOR_E,
//   XOR_H,
//   XOR_L,
//   XOR_i_HL,
//   XOR_A,
//   OR_B,
//   OR_C,
//   OR_D,
//   OR_E,
//   OR_H,
//   OR_L,
//   OR_i_HL,
//   OR_A,
//   CP_B,
//   CP_C,
//   CP_D,
//   CP_E,
//   CP_H,
//   CP_L,
//   CP_i_HL,
//   CP_A,
//   RET_NZ,
//   POP_BC,
//   JP_NZ_a16,
//   JP_a16,
//   CALL_NZ_a16,
//   PUSH_BC,
//   ADD_A_d8,
//   RST_00H,
//   RET_Z,
//   RET,
//   JP_Z_a16,
//   CB_PREFIX,
//   CALL_Z_a16,
//   CALL_a16,
//   ADC_A_d8,
//   RST_08H,
//   RET_NC,
//   POP_DE,
//   JP_NC_a16,
//   D3_NA,
//   CALL_NC_a16,
//   PUSH_DE,
//   SUB_d8,
//   RST_10H,
//   RET_C,
//   RETI,
//   JP_C_a16,
//   DB_NA,
//   CALL_C_a16,
//   DD_NA,
//   SBC_A_d8,
//   RST_18H,
//   LDH_i_a8_A,
//   POP_HL,
//   LD_i_C_A,
//   E3_NA,
//   E4_NA,
//   PUSH_HL,
//   AND_d8,
//   RST_20H,
//   ADD_SP_r8,
//   JP_i_HL,
//   LD_i_a16_A,
//   EB_NA,
//   EC_NA,
//   ED_NA,
//   XOR_d8,
//   RST_28H,
//   LDH_A_i_a8,
//   POP_AF,
//   LD_A_i_C,
//   DI,
//   F4_NA,
//   PUSH_AF,
//   OR_d8,
//   RST_30H,
//   LD_HL_SPpr8,
//   LD_SP_HL,
//   LD_A_i_a16,
//   EI,
//   FC_NA,
//   FD_NA,
//   CP_d8,
//   RST_38H
// }

// enum OpCode_CB {
//   RLC_B,
//   RLC_C,
//   RLC_D,
//   RLC_E,
//   RLC_H,
//   RLC_L,
//   RLC_i_HL,
//   RLC_A,
//   RRC_B,
//   RRC_C,
//   RRC_D,
//   RRC_E,
//   RRC_H,
//   RRC_L,
//   RRC_i_HL,
//   RRC_A,
//   RL_B,
//   RL_C,
//   RL_D,
//   RL_E,
//   RL_H,
//   RL_L,
//   RL_i_HL,
//   RL_A,
//   RR_B,
//   RR_C,
//   RR_D,
//   RR_E,
//   RR_H,
//   RR_L,
//   RR_i_HL,
//   RR_A,
//   SLA_B,
//   SLA_C,
//   SLA_D,
//   SLA_E,
//   SLA_H,
//   SLA_L,
//   SLA_i_HL,
//   SLA_A,
//   SRA_B,
//   SRA_C,
//   SRA_D,
//   SRA_E,
//   SRA_H,
//   SRA_L,
//   SRA_i_HL,
//   SRA_A,
//   SWAP_B,
//   SWAP_C,
//   SWAP_D,
//   SWAP_E,
//   SWAP_H,
//   SWAP_L,
//   SWAP_i_HL,
//   SWAP_A,
//   SRL_B,
//   SRL_C,
//   SRL_D,
//   SRL_E,
//   SRL_H,
//   SRL_L,
//   SRL_i_HL,
//   SRL_A,
//   BIT_0_B,
//   BIT_0_C,
//   BIT_0_D,
//   BIT_0_E,
//   BIT_0_H,
//   BIT_0_L,
//   BIT_0_i_HL,
//   BIT_0_A,
//   BIT_1_B,
//   BIT_1_C,
//   BIT_1_D,
//   BIT_1_E,
//   BIT_1_H,
//   BIT_1_L,
//   BIT_1_i_HL,
//   BIT_1_A,
//   BIT_2_B,
//   BIT_2_C,
//   BIT_2_D,
//   BIT_2_E,
//   BIT_2_H,
//   BIT_2_L,
//   BIT_2_i_HL,
//   BIT_2_A,
//   BIT_3_B,
//   BIT_3_C,
//   BIT_3_D,
//   BIT_3_E,
//   BIT_3_H,
//   BIT_3_L,
//   BIT_3_i_HL,
//   BIT_3_A,
//   BIT_4_B,
//   BIT_4_C,
//   BIT_4_D,
//   BIT_4_E,
//   BIT_4_H,
//   BIT_4_L,
//   BIT_4_i_HL,
//   BIT_4_A,
//   BIT_5_B,
//   BIT_5_C,
//   BIT_5_D,
//   BIT_5_E,
//   BIT_5_H,
//   BIT_5_L,
//   BIT_5_i_HL,
//   BIT_5_A,
//   BIT_6_B,
//   BIT_6_C,
//   BIT_6_D,
//   BIT_6_E,
//   BIT_6_H,
//   BIT_6_L,
//   BIT_6_i_HL,
//   BIT_6_A,
//   BIT_7_B,
//   BIT_7_C,
//   BIT_7_D,
//   BIT_7_E,
//   BIT_7_H,
//   BIT_7_L,
//   BIT_7_i_HL,
//   BIT_7_A,
//   RES_0_B,
//   RES_0_C,
//   RES_0_D,
//   RES_0_E,
//   RES_0_H,
//   RES_0_L,
//   RES_0_i_HL,
//   RES_0_A,
//   RES_1_B,
//   RES_1_C,
//   RES_1_D,
//   RES_1_E,
//   RES_1_H,
//   RES_1_L,
//   RES_1_i_HL,
//   RES_1_A,
//   RES_2_B,
//   RES_2_C,
//   RES_2_D,
//   RES_2_E,
//   RES_2_H,
//   RES_2_L,
//   RES_2_i_HL,
//   RES_2_A,
//   RES_3_B,
//   RES_3_C,
//   RES_3_D,
//   RES_3_E,
//   RES_3_H,
//   RES_3_L,
//   RES_3_i_HL,
//   RES_3_A,
//   RES_4_B,
//   RES_4_C,
//   RES_4_D,
//   RES_4_E,
//   RES_4_H,
//   RES_4_L,
//   RES_4_i_HL,
//   RES_4_A,
//   RES_5_B,
//   RES_5_C,
//   RES_5_D,
//   RES_5_E,
//   RES_5_H,
//   RES_5_L,
//   RES_5_i_HL,
//   RES_5_A,
//   RES_6_B,
//   RES_6_C,
//   RES_6_D,
//   RES_6_E,
//   RES_6_H,
//   RES_6_L,
//   RES_6_i_HL,
//   RES_6_A,
//   RES_7_B,
//   RES_7_C,
//   RES_7_D,
//   RES_7_E,
//   RES_7_H,
//   RES_7_L,
//   RES_7_i_HL,
//   RES_7_A,
//   SET_0_B,
//   SET_0_C,
//   SET_0_D,
//   SET_0_E,
//   SET_0_H,
//   SET_0_L,
//   SET_0_i_HL,
//   SET_0_A,
//   SET_1_B,
//   SET_1_C,
//   SET_1_D,
//   SET_1_E,
//   SET_1_H,
//   SET_1_L,
//   SET_1_i_HL,
//   SET_1_A,
//   SET_2_B,
//   SET_2_C,
//   SET_2_D,
//   SET_2_E,
//   SET_2_H,
//   SET_2_L,
//   SET_2_i_HL,
//   SET_2_A,
//   SET_3_B,
//   SET_3_C,
//   SET_3_D,
//   SET_3_E,
//   SET_3_H,
//   SET_3_L,
//   SET_3_i_HL,
//   SET_3_A,
//   SET_4_B,
//   SET_4_C,
//   SET_4_D,
//   SET_4_E,
//   SET_4_H,
//   SET_4_L,
//   SET_4_i_HL,
//   SET_4_A,
//   SET_5_B,
//   SET_5_C,
//   SET_5_D,
//   SET_5_E,
//   SET_5_H,
//   SET_5_L,
//   SET_5_i_HL,
//   SET_5_A,
//   SET_6_B,
//   SET_6_C,
//   SET_6_D,
//   SET_6_E,
//   SET_6_H,
//   SET_6_L,
//   SET_6_i_HL,
//   SET_6_A,
//   SET_7_B,
//   SET_7_C,
//   SET_7_D,
//   SET_7_E,
//   SET_7_H,
//   SET_7_L,
//   SET_7_i_HL,
//   SET_7_A
// }

/* Debug */

// void debug()
// {
//   for (var info in instInfos)
//   {
//     assert (instInfos.indexOf(info) == info.opCode.index);
//     print(info);
//   }
// }

// void debugEX()
// {
//   for (var info in EXinstInfos)
//   {
//     assert (EXinstInfos.indexOf(info) == info.opCode.index);
//     print(info);
//   }
// }

// void main ()
// {
//   debug();
//   debugEX();
// }
